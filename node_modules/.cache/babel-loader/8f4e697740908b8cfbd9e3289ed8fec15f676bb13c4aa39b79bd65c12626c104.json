{"ast":null,"code":"var _jsxFileName = \"/Users/yoonchulroh/Projects/ocr-app/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _images$currentImageI, _images$currentImageI2;\n  const [images, setImages] = useState([]);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [text, setText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [batchProgress, setBatchProgress] = useState({\n    current: 0,\n    total: 0\n  });\n  const [imageDimensions, setImageDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [coordinates, setCoordinates] = useState({\n    minX: 0,\n    maxX: 0,\n    minY: 0,\n    maxY: 0\n  });\n  const canvasRef = useRef(null);\n\n  // Draw rectangle on image\n  const drawRectangle = img => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size to match image\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    // Draw the image\n    ctx.drawImage(img, 0, 0);\n\n    // Draw rectangle\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(coordinates.minX, coordinates.minY, coordinates.maxX - coordinates.minX, coordinates.maxY - coordinates.minY);\n  };\n\n  // Update rectangle when coordinates change\n  useEffect(() => {\n    if (images[currentImageIndex]) {\n      const img = new Image();\n      img.src = images[currentImageIndex].url;\n      img.onload = () => {\n        drawRectangle(img);\n        setImageDimensions({\n          width: img.width,\n          height: img.height\n        });\n      };\n    }\n  }, [coordinates, currentImageIndex, images]);\n\n  // Handle coordinate changes\n  const handleCoordinateChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: parseInt(value) || 0\n    }));\n  };\n\n  // Handle image upload\n  const handleImageChange = e => {\n    if (e.target.files) {\n      const newImages = Array.from(e.target.files).map(file => ({\n        url: URL.createObjectURL(file),\n        coordinates: {\n          minX: 0,\n          maxX: 0,\n          minY: 0,\n          maxY: 0\n        },\n        text: ''\n      }));\n      setImages(prev => [...prev, ...newImages]);\n      setCurrentImageIndex(prev => prev + newImages.length - 1);\n    }\n  };\n\n  // Handle image selection\n  const handleImageSelect = index => {\n    setCurrentImageIndex(index);\n    setCoordinates(images[index].coordinates);\n    setText(images[index].text);\n  };\n\n  // Crop image using coordinates\n  const cropImage = imageElement => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size to the specified dimensions\n    canvas.width = coordinates.maxX - coordinates.minX;\n    canvas.height = coordinates.maxY - coordinates.minY;\n\n    // Draw the cropped region\n    ctx.drawImage(imageElement, coordinates.minX, coordinates.minY, coordinates.maxX - coordinates.minX, coordinates.maxY - coordinates.minY, 0, 0, coordinates.maxX - coordinates.minX, coordinates.maxY - coordinates.minY);\n    return canvas.toDataURL('image/png');\n  };\n\n  // Process single image with OCR\n  const processImageOCR = imageUrl => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.src = imageUrl;\n      img.onload = () => {\n        const croppedImageData = cropImage(img);\n        Tesseract.recognize(croppedImageData, 'eng', {\n          logger: m => console.log(m)\n        }).then(({\n          data: {\n            text\n          }\n        }) => {\n          resolve({\n            text,\n            croppedImageData\n          });\n        }).catch(reject);\n      };\n    });\n  };\n\n  // Process image and run OCR\n  const handleRunOCR = () => {\n    if (!images[currentImageIndex]) {\n      alert('Please upload an image first');\n      return;\n    }\n    setIsLoading(true);\n    processImageOCR(images[currentImageIndex].url).then(({\n      text,\n      croppedImageData\n    }) => {\n      setText(text);\n      setImages(prev => prev.map((img, index) => index === currentImageIndex ? {\n        ...img,\n        text,\n        coordinates,\n        croppedImageData\n      } : img));\n      setIsLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setIsLoading(false);\n    });\n  };\n\n  // Process all images with OCR\n  const handleRunOCRAll = async () => {\n    if (images.length === 0) {\n      alert('Please upload images first');\n      return;\n    }\n    setIsLoading(true);\n    setBatchProgress({\n      current: 0,\n      total: images.length\n    });\n    try {\n      const updatedImages = await Promise.all(images.map(async (img, index) => {\n        const {\n          text,\n          croppedImageData\n        } = await processImageOCR(img.url);\n        setBatchProgress(prev => ({\n          ...prev,\n          current: index + 1\n        }));\n        return {\n          ...img,\n          text,\n          coordinates,\n          croppedImageData\n        };\n      }));\n      setImages(updatedImages);\n      setText(updatedImages[currentImageIndex].text);\n      setIsLoading(false);\n      setBatchProgress({\n        current: 0,\n        total: 0\n      });\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n      setBatchProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n\n  // Handle coordinate changes for current image\n  const handleCurrentImageCoordinatesChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newCoordinates = {\n      ...coordinates,\n      [name]: parseInt(value) || 0\n    };\n    setCoordinates(newCoordinates);\n    // Update coordinates in the images array\n    setImages(prev => prev.map((img, index) => index === currentImageIndex ? {\n      ...img,\n      coordinates: newCoordinates\n    } : img));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OCR Image to Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-thumbnails\",\n        children: images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `image-thumbnail ${index === currentImageIndex ? 'selected' : ''}`,\n          onClick: () => handleImageSelect(index),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: img.url,\n            alt: `Thumbnail ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Image \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coordinates-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter Coordinates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coordinate-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Min X:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"minX\",\n            value: coordinates.minX,\n            onChange: handleCurrentImageCoordinatesChange,\n            placeholder: \"Min X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Max X:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"maxX\",\n            value: coordinates.maxX,\n            onChange: handleCurrentImageCoordinatesChange,\n            placeholder: \"Max X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Min Y:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"minY\",\n            value: coordinates.minY,\n            onChange: handleCurrentImageCoordinatesChange,\n            placeholder: \"Min Y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Max Y:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"maxY\",\n            value: coordinates.maxY,\n            onChange: handleCurrentImageCoordinatesChange,\n            placeholder: \"Max Y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"run-ocr\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRunOCR,\n        disabled: isLoading,\n        children: isLoading ? 'Processing...' : 'Run OCR on Current Image'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRunOCRAll,\n        disabled: isLoading,\n        className: \"run-all-button\",\n        children: isLoading ? `Processing ${batchProgress.current}/${batchProgress.total}...` : 'Run OCR on All Images'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Original Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            maxWidth: '400px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-dimensions\",\n          children: [\"Size: \", imageDimensions.width, \" x \", imageDimensions.height, \" pixels\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), ((_images$currentImageI = images[currentImageIndex]) === null || _images$currentImageI === void 0 ? void 0 : _images$currentImageI.croppedImageData) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cropped Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[currentImageIndex].croppedImageData,\n          alt: \"Cropped\",\n          style: {\n            maxWidth: '400px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this), ((_images$currentImageI2 = images[currentImageIndex]) === null || _images$currentImageI2 === void 0 ? void 0 : _images$currentImageI2.text) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extracted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: images[currentImageIndex].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iJ87x3CtVCkSd1FeAZfYGncqYbI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Tesseract","jsxDEV","_jsxDEV","App","_s","_images$currentImageI","_images$currentImageI2","images","setImages","currentImageIndex","setCurrentImageIndex","text","setText","isLoading","setIsLoading","batchProgress","setBatchProgress","current","total","imageDimensions","setImageDimensions","width","height","coordinates","setCoordinates","minX","maxX","minY","maxY","canvasRef","drawRectangle","img","canvas","ctx","getContext","drawImage","strokeStyle","lineWidth","strokeRect","Image","src","url","onload","handleCoordinateChange","e","name","value","target","prev","parseInt","handleImageChange","files","newImages","Array","from","map","file","URL","createObjectURL","length","handleImageSelect","index","cropImage","imageElement","document","createElement","toDataURL","processImageOCR","imageUrl","Promise","resolve","reject","croppedImageData","recognize","logger","m","console","log","then","data","catch","handleRunOCR","alert","error","handleRunOCRAll","updatedImages","all","handleCurrentImageCoordinatesChange","newCoordinates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","onClick","alt","placeholder","disabled","ref","style","maxWidth","_c","$RefreshReg$"],"sources":["/Users/yoonchulroh/Projects/ocr-app/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [text, setText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [batchProgress, setBatchProgress] = useState({ current: 0, total: 0 });\n  const [imageDimensions, setImageDimensions] = useState({ width: 0, height: 0 });\n  const [coordinates, setCoordinates] = useState({\n    minX: 0,\n    maxX: 0,\n    minY: 0,\n    maxY: 0\n  });\n  const canvasRef = useRef(null);\n\n  // Draw rectangle on image\n  const drawRectangle = (img) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size to match image\n    canvas.width = img.width;\n    canvas.height = img.height;\n    \n    // Draw the image\n    ctx.drawImage(img, 0, 0);\n    \n    // Draw rectangle\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(\n      coordinates.minX,\n      coordinates.minY,\n      coordinates.maxX - coordinates.minX,\n      coordinates.maxY - coordinates.minY\n    );\n  };\n\n  // Update rectangle when coordinates change\n  useEffect(() => {\n    if (images[currentImageIndex]) {\n      const img = new Image();\n      img.src = images[currentImageIndex].url;\n      img.onload = () => {\n        drawRectangle(img);\n        setImageDimensions({ width: img.width, height: img.height });\n      };\n    }\n  }, [coordinates, currentImageIndex, images]);\n\n  // Handle coordinate changes\n  const handleCoordinateChange = (e) => {\n    const { name, value } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: parseInt(value) || 0\n    }));\n  };\n\n  // Handle image upload\n  const handleImageChange = (e) => {\n    if (e.target.files) {\n      const newImages = Array.from(e.target.files).map(file => ({\n        url: URL.createObjectURL(file),\n        coordinates: { minX: 0, maxX: 0, minY: 0, maxY: 0 },\n        text: ''\n      }));\n      setImages(prev => [...prev, ...newImages]);\n      setCurrentImageIndex(prev => prev + newImages.length - 1);\n    }\n  };\n\n  // Handle image selection\n  const handleImageSelect = (index) => {\n    setCurrentImageIndex(index);\n    setCoordinates(images[index].coordinates);\n    setText(images[index].text);\n  };\n\n  // Crop image using coordinates\n  const cropImage = (imageElement) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size to the specified dimensions\n    canvas.width = coordinates.maxX - coordinates.minX;\n    canvas.height = coordinates.maxY - coordinates.minY;\n    \n    // Draw the cropped region\n    ctx.drawImage(\n      imageElement,\n      coordinates.minX, coordinates.minY,\n      coordinates.maxX - coordinates.minX, coordinates.maxY - coordinates.minY,\n      0, 0,\n      coordinates.maxX - coordinates.minX, coordinates.maxY - coordinates.minY\n    );\n    \n    return canvas.toDataURL('image/png');\n  };\n\n  // Process single image with OCR\n  const processImageOCR = (imageUrl) => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.src = imageUrl;\n      \n      img.onload = () => {\n        const croppedImageData = cropImage(img);\n        \n        Tesseract.recognize(\n          croppedImageData,\n          'eng',\n          {\n            logger: (m) => console.log(m)\n          }\n        )\n          .then(({ data: { text } }) => {\n            resolve({ text, croppedImageData });\n          })\n          .catch(reject);\n      };\n    });\n  };\n\n  // Process image and run OCR\n  const handleRunOCR = () => {\n    if (!images[currentImageIndex]) {\n      alert('Please upload an image first');\n      return;\n    }\n\n    setIsLoading(true);\n    processImageOCR(images[currentImageIndex].url)\n      .then(({ text, croppedImageData }) => {\n        setText(text);\n        setImages(prev => prev.map((img, index) => \n          index === currentImageIndex ? { ...img, text, coordinates, croppedImageData } : img\n        ));\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error(error);\n        setIsLoading(false);\n      });\n  };\n\n  // Process all images with OCR\n  const handleRunOCRAll = async () => {\n    if (images.length === 0) {\n      alert('Please upload images first');\n      return;\n    }\n\n    setIsLoading(true);\n    setBatchProgress({ current: 0, total: images.length });\n\n    try {\n      const updatedImages = await Promise.all(\n        images.map(async (img, index) => {\n          const { text, croppedImageData } = await processImageOCR(img.url);\n          setBatchProgress(prev => ({ ...prev, current: index + 1 }));\n          return { ...img, text, coordinates, croppedImageData };\n        })\n      );\n\n      setImages(updatedImages);\n      setText(updatedImages[currentImageIndex].text);\n      setIsLoading(false);\n      setBatchProgress({ current: 0, total: 0 });\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n      setBatchProgress({ current: 0, total: 0 });\n    }\n  };\n\n  // Handle coordinate changes for current image\n  const handleCurrentImageCoordinatesChange = (e) => {\n    const { name, value } = e.target;\n    const newCoordinates = {\n      ...coordinates,\n      [name]: parseInt(value) || 0\n    };\n    setCoordinates(newCoordinates);\n    // Update coordinates in the images array\n    setImages(prev => prev.map((img, index) => \n      index === currentImageIndex ? { ...img, coordinates: newCoordinates } : img\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>OCR Image to Text</h1>\n      \n      {/* Image Upload */}\n      <div>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          multiple\n          onChange={handleImageChange}\n        />\n      </div>\n\n      {/* Image Selection */}\n      {images.length > 0 && (\n        <div className=\"image-selection\">\n          <h3>Select Image:</h3>\n          <div className=\"image-thumbnails\">\n            {images.map((img, index) => (\n              <div \n                key={index}\n                className={`image-thumbnail ${index === currentImageIndex ? 'selected' : ''}`}\n                onClick={() => handleImageSelect(index)}\n              >\n                <img src={img.url} alt={`Thumbnail ${index + 1}`} />\n                <span>Image {index + 1}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Coordinate Inputs */}\n      {images.length > 0 && (\n        <div className=\"coordinates-input\">\n          <h3>Enter Coordinates</h3>\n          <div className=\"coordinate-group\">\n            <div>\n              <label>Min X:</label>\n              <input\n                type=\"number\"\n                name=\"minX\"\n                value={coordinates.minX}\n                onChange={handleCurrentImageCoordinatesChange}\n                placeholder=\"Min X\"\n              />\n            </div>\n            <div>\n              <label>Max X:</label>\n              <input\n                type=\"number\"\n                name=\"maxX\"\n                value={coordinates.maxX}\n                onChange={handleCurrentImageCoordinatesChange}\n                placeholder=\"Max X\"\n              />\n            </div>\n            <div>\n              <label>Min Y:</label>\n              <input\n                type=\"number\"\n                name=\"minY\"\n                value={coordinates.minY}\n                onChange={handleCurrentImageCoordinatesChange}\n                placeholder=\"Min Y\"\n              />\n            </div>\n            <div>\n              <label>Max Y:</label>\n              <input\n                type=\"number\"\n                name=\"maxY\"\n                value={coordinates.maxY}\n                onChange={handleCurrentImageCoordinatesChange}\n                placeholder=\"Max Y\"\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* OCR Buttons */}\n      {images.length > 0 && (\n        <div className=\"run-ocr\">\n          <button onClick={handleRunOCR} disabled={isLoading}>\n            {isLoading ? 'Processing...' : 'Run OCR on Current Image'}\n          </button>\n          <button onClick={handleRunOCRAll} disabled={isLoading} className=\"run-all-button\">\n            {isLoading ? `Processing ${batchProgress.current}/${batchProgress.total}...` : 'Run OCR on All Images'}\n          </button>\n        </div>\n      )}\n\n      {/* Image Previews Container */}\n      {images.length > 0 && (\n        <div className=\"image-preview-container\">\n          {/* Original Image with Rectangle */}\n          <div className=\"image-preview\">\n            <h2>Original Image:</h2>\n            <canvas ref={canvasRef} style={{ maxWidth: '400px' }} />\n            <div className=\"image-dimensions\">\n              Size: {imageDimensions.width} x {imageDimensions.height} pixels\n            </div>\n          </div>\n\n          {/* Cropped Image Preview */}\n          {images[currentImageIndex]?.croppedImageData && (\n            <div className=\"image-preview\">\n              <h2>Cropped Image:</h2>\n              <img \n                src={images[currentImageIndex].croppedImageData} \n                alt=\"Cropped\" \n                style={{ maxWidth: '400px' }} \n              />\n            </div>\n          )}\n\n          {/* Extracted Text */}\n          {images[currentImageIndex]?.text && (\n            <div className=\"result\">\n              <h2>Extracted Text:</h2>\n              <pre>{images[currentImageIndex].text}</pre>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Loading Indicator */}\n      {isLoading && <p>Processing image...</p>}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}